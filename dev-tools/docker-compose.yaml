version: '3.9'

services:
  postgres:
    image: postgres:15.4
    container_name: postgres
    networks:
      - clienter-network
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: alfred
  pgadmin:
    image: dpage/pgadmin4
    container_name: my-pgadmin
    networks:
      - clienter-network
    ports:
      - 2345:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres
  mongo:
    image: mongo
    container_name: mongodb
    restart: always
    networks:
      - clienter-network
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["--auth"]
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    networks:
      - clienter-network
    restart: always
    ports:
      - 5002:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    links:
      - mongo
    depends_on:
      mongo:
        condition: service_healthy
  init-mongo:
    image: mongo
    networks:
      - clienter-network
    command: >
      mongosh --host mongo -u root -p root --authenticationDatabase admin --eval '
        db = db.getSiblingDB("Clienter");
        db.createUser({
          user: "root",
          pwd: "root",
          roles: [{ role: "dbOwner", db: "Clienter" }]
        });
      '
    links:
      - mongo
    depends_on:
      mongo:
        condition: service_healthy
networks:
  clienter-network:
    driver: bridge
